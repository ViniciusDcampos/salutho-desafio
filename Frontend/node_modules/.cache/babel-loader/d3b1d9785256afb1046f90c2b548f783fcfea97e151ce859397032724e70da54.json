{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viniv\\\\salutho\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Banner from './componentes/Banner';\nimport Formulario from './componentes/Formulario';\nimport ResultadoDivisao from './componentes/ResultadoDivisao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [resultado, setResultado] = useState(null);\n  const [valorX, setValorX] = useState('');\n  const [valorY, setValorY] = useState('');\n\n  // Função que simula o cálculo ou a chamada à API Django\n  const calcular = (x, y) => {\n    console.log(`Calculando com X: ${x} e Y: ${y}`);\n    // Aqui você pode implementar a lógica de cálculo ou chamada à API\n    // Por exemplo, para um teste, você pode definir um resultado fictício:\n    const resultadoCalculado = parseInt(x) * parseInt(y); // Exemplo simples de multiplicação\n    setResultado(resultadoCalculado);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultadoDivisao, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"apSleQpojJ1xKWvmzE3kitJ0npc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Banner","Formulario","ResultadoDivisao","jsxDEV","_jsxDEV","App","_s","resultado","setResultado","useState","valorX","setValorX","valorY","setValorY","calcular","x","y","console","log","resultadoCalculado","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/viniv/salutho/src/App.js"],"sourcesContent":["import Banner from './componentes/Banner';\nimport Formulario from './componentes/Formulario';\nimport ResultadoDivisao from './componentes/ResultadoDivisao';\n\n\n\nfunction App() {\n  \n  const [resultado, setResultado] = useState(null);\n  const [valorX, setValorX] = useState('');\n  const [valorY, setValorY] = useState('');\n\n  // Função que simula o cálculo ou a chamada à API Django\n  const calcular = (x, y) => {\n      console.log(`Calculando com X: ${x} e Y: ${y}`);\n      // Aqui você pode implementar a lógica de cálculo ou chamada à API\n      // Por exemplo, para um teste, você pode definir um resultado fictício:\n      const resultadoCalculado = parseInt(x) * parseInt(y); // Exemplo simples de multiplicação\n      setResultado(resultadoCalculado);\n  };\n  \n  return (\n    <div className=\"App\">\n      <Banner  />\n      <Formulario />\n      <ResultadoDivisao  />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMK,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,qBAAqBH,CAAC,SAASC,CAAC,EAAE,CAAC;IAC/C;IACA;IACA,MAAMG,kBAAkB,GAAGC,QAAQ,CAACL,CAAC,CAAC,GAAGK,QAAQ,CAACJ,CAAC,CAAC,CAAC,CAAC;IACtDR,YAAY,CAACW,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACXtB,OAAA,CAACH,UAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdtB,OAAA,CAACF,gBAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACpB,EAAA,CAtBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}